#!/usr/bin/python

# Project Clearwater - IMS in the Cloud
# Copyright (C) 2015 Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

import amulet
import subprocess
import sys, os

# Load our recommended bundle
d = amulet.Deployment.from_bundle("charms/bundles/clearwater/bundle/bundles.yaml")

# Configure 'testing.example.com' as the common home domain, and 'testing' as
# the Ellis signup key
options = {'zone': 'testing.example.com'}
for service in ['clearwater-bono', 'clearwater-sprout', 'clearwater-ralf', 'clearwater-homestead', 'clearwater-homer', 'clearwater-ellis']:
    d.configure(service, options)

d.configure('clearwater-ellis', options={'signup_key': 'testing'})
d.configure('dns', options={'domain': 'testing.example.com'})

# Exposed services aren't learnt from the bundle - do that manually
d.expose('clearwater-ellis')
d.expose('clearwater-bono')

# Create the deployment described above, give us 900 seconds to do it
d.setup(timeout=900)
# Setup will only make sure the services are deployed, related, and in a
# "started" state. We can employ the sentries to actually make sure there
# are no more hooks being executed on any of the nodes.
d.sentry.wait()

# Learn the public IP addresses of Bono and Ellis
bono = d.sentry['clearwater-bono/0'].info['public-address']
ellis = d.sentry['clearwater-ellis/0'].info['public-address']

# Run the 'basic call' test against Bono and Ellis
sys.stderr.write('About to run live tests\n')
subprocess.check_call(
    'cd tests/clearwater-live-test && bundle install --path localgems && bundle exec rake test[testing.example.com] TESTS="Basic Call - Mainline" TRANSPORT=TCP ELLIS={} PROXY={} SIGNUP_CODE="testing" >&2'.format(ellis, bono),
    shell=True)
